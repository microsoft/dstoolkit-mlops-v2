
parameters:
 - name: exec_environment
   displayName: "Execution Environment"
   default: "dev"
 - name: model_type
   displayName: "type of model to execute"

stages:
    - stage: execute_training_job
      displayName: execute_training_job
      jobs:
      - job: Execute_ml_Job_Pipeline
        steps:
        - template: configure_azureml_agent.yml
        - template: execute_python_code.yml
          parameters:
            step_name: "Execute Azure ML pipeline job"
            script_parameter: |
              python -m mlops.${{ parameters.model_type }}.src.mlops_pipeline \
                --build_environment ${{parameters.exec_environment}} \
                --wait_for_completion False \
                --output_file run_id.txt
        - task: AzureCLI@2
          displayName: Read Run ID
          name: read_run_id
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(System.DefaultWorkingDirectory)
            inlineScript: |
              readarray arr <"run_id.txt"
              run_name=${arr[0]}
              echo $run_name
              echo "##vso[task.setvariable variable=RUN_NAME;isOutput=true;]$run_name"

              python -m mlops.common.get_run_metadata \
                --run_id $run_name \
                --output_file_name metadata.txt
              
              readarray arr <"metadata.txt"
              metadata=${arr[0]}
              echo $metadata
              echo "##vso[task.setvariable variable=RUN_METADATA;isOutput=true;]$metadata"

      - job: WaitForAzureMLJobCompletion
        displayName: Wait for AzureML Job Completion
        pool: server
        timeoutInMinutes: 0
        dependsOn: Execute_ml_Job_Pipeline
        variables: 
          # We are saving the name of Azure ML job submitted in previous step to a variable and it will be used as an input to the AzureML Job Wait task
          azureml_job_name_from_submit_job: $[ dependencies.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ] 
        steps:
        - task: AzureMLJobWaitTask@1
          inputs:
            serviceConnection: $(AZURE_RM_SVC_CONNECTION)
            resourceGroupName: $(RESOURCE_GROUP_NAME)
            azureMLWorkspaceName: $(WORKSPACE_NAME)
            azureMLJobName: $(azureml_job_name_from_submit_job)
      
    - stage: 'Deploy_Online'
      dependsOn: 
      - execute_training_job
      variables:
      - name: run_id_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ]
      displayName: 'Deploy as Online Endpoint'
      condition: variables['IS_ONLINE_DEPLOYMENT']
      jobs:
      - job: Execute_Deployment_Job
        steps:
        - template: configure_azureml_agent.yml
        - template: execute_python_code.yml
          parameters:
            step_name: "provision azureml online endpoint"
            script_parameter: |
                python -m mlops.common.deployment.provision_online_endpoint \
                    --run_id "$(run_id_from_submit_job)" \
                    --environment_name ${{ parameters.exec_environment }} \
                    --model_type ${{ parameters.model_type }}

        - template: execute_python_code.yml
          parameters:
            step_name: "provision azureml deployment"
            script_parameter: |
                python -m mlops.common.deployment.provision_online_deployment \
                    --run_id "$(run_id_from_submit_job)" \
                    --environment_name ${{ parameters.exec_environment }} \
                    --model_type ${{ parameters.model_type }}

        - template: execute_python_code.yml
          parameters:
            step_name: "test azureml real endpoint"
            script_parameter: |
                python -m mlops.common.deployment.run_test_model_on_aml \
                    --environment_name ${{ parameters.exec_environment }} \
                    --model_type ${{ parameters.model_type }}

    - stage: 'Deploy_Batch'
      dependsOn: 
      - execute_training_job
      variables:
      - name: run_id_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ]
      displayName: 'Deploy as Batch Endpoint'
      jobs:
      - job: Execute_Deployment_Job
        steps:
        - template: configure_azureml_agent.yml
        - template: execute_python_code.yml
          parameters:
            step_name: "provision azureml online endpoint"
            script_parameter: |
              python -m mlops.common.deployment.provision_batch_endpoint \
                --run_id "$(run_id_from_submit_job)" \
                --environment_name ${{ parameters.exec_environment }} \
                --model_type ${{ parameters.model_type }}

        - powershell: Start-Sleep -Seconds 180

        - template: execute_python_code.yml
          parameters:
            step_name: "provision azureml deployment"
            script_parameter: |
              python -m mlops.common.deployment.provision_batch_deployment \
                --run_id "$(run_id_from_submit_job)" \
                --environment_name ${{ parameters.exec_environment }} \
                --model_type ${{ parameters.model_type }}

        - template: execute_python_code.yml
          parameters:
            step_name: "test azureml batch endpoint"
            script_parameter: |
              python -m mlops.common.deployment.run_test_batch_deployment \
                --environment_name ${{ parameters.exec_environment }} \
                --model_type ${{ parameters.model_type }}

    - stage: 'Approve_Model'
      dependsOn: 
      - execute_training_job
      variables:
      - name: run_metadata_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_METADATA'] ]
      displayName: 'Approval_Stage'
      jobs:
      - job: ApproveDeployment
        displayName: Approve for Model Deployment  
        pool: server    
        timeoutInMinutes: 60 # job times out in 60 minutes
        steps:   
        - task: ManualValidation@0
          timeoutInMinutes: 60 # task times out in 60 minutes
          inputs:
            instructions: "$(run_metadata_from_submit_job)"
            onTimeout: 'reject'

    - stage: 'Change_Model_Tag'
      dependsOn: 
      - Approve_Model
      displayName: 'Apply Production Tag'
      jobs:
      - job: ChangeModelTag
        steps:
        - template: configure_azureml_agent.yml
        - template: execute_python_code.yml
          parameters:
            step_name: "change_model_tag"
            script_parameter: |
              python -m mlops.common.deployment.approve_model \
                --model_type ${{ parameters.model_type }}
